{
    "type": "Program",
    "body": [
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "f"
            },
            "params": [],
            "defaults": [],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "__spy"
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": 8,
                                    "raw": "8"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "arguments"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "Identifier",
                                "name": "__3"
                            },
                            "right": {
                                "type": "ObjectExpression",
                                "properties": [
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Identifier",
                                            "name": "answer"
                                        },
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [],
                                            "defaults": [],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "__spy"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": 10,
                                                                    "raw": "10"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "arguments"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "__4"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "*",
                                                                "left": {
                                                                    "type": "Literal",
                                                                    "value": 6,
                                                                    "raw": "6"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 7,
                                                                    "raw": "7"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "__spy"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": 10,
                                                                    "raw": "10"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "__4"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Identifier",
                                                            "name": "__4"
                                                        }
                                                    }
                                                ]
                                            },
                                            "rest": null,
                                            "generator": false,
                                            "expression": false
                                        },
                                        "kind": "get"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "__spy"
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": 9,
                                    "raw": "9"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "__3"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "Identifier",
                            "name": "__3"
                        }
                    }
                ]
            },
            "rest": null,
            "generator": false,
            "expression": false
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "__spy"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1"
                    },
                    {
                        "type": "Identifier",
                        "name": "f"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "__spy"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 2,
                        "raw": "2"
                    },
                    {
                        "type": "Identifier",
                        "name": "f"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "Identifier",
                    "name": "g"
                },
                "right": {
                    "type": "Identifier",
                    "name": "f"
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "__spy"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 3,
                        "raw": "3"
                    },
                    {
                        "type": "Identifier",
                        "name": "g"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "__spy"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 4,
                        "raw": "4"
                    },
                    {
                        "type": "Identifier",
                        "name": "g"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "Identifier",
                    "name": "__1"
                },
                "right": {
                    "type": "CallExpression",
                    "callee": {
                        "type": "Identifier",
                        "name": "g"
                    },
                    "arguments": []
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "__spy"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 5,
                        "raw": "5"
                    },
                    {
                        "type": "Identifier",
                        "name": "__1"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "Identifier",
                    "name": "__2"
                },
                "right": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                        "type": "Identifier",
                        "name": "__1"
                    },
                    "property": {
                        "type": "Identifier",
                        "name": "answer"
                    }
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "__spy"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 6,
                        "raw": "6"
                    },
                    {
                        "type": "Identifier",
                        "name": "__2"
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "answer"
                    },
                    "init": {
                        "type": "Identifier",
                        "name": "__2"
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "__spy"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 7,
                        "raw": "7"
                    },
                    {
                        "type": "Identifier",
                        "name": "answer"
                    }
                ]
            }
        }
    ]
}